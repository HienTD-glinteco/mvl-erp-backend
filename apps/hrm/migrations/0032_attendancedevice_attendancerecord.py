# Generated by Django 5.2.6 on 2025-11-01 07:43

import django.db.models.deletion
from django.db import migrations, models

import libs.models.fields


class Migration(migrations.Migration):
    dependencies = [
        ("hrm", "0031_alter_employeerelationship_relation_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="AttendanceDevice",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(help_text="Name for the device", max_length=200, verbose_name="Device name"),
                ),
                (
                    "ip_address",
                    models.CharField(
                        help_text="Network address for device communication",
                        max_length=255,
                        verbose_name="IP address or domain",
                    ),
                ),
                (
                    "port",
                    models.PositiveIntegerField(
                        default=4370, help_text="Network port for device communication", verbose_name="Port"
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="Authentication password for device access",
                        max_length=100,
                        verbose_name="Password",
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        blank=True,
                        help_text="Manufacturer's device serial number",
                        max_length=100,
                        verbose_name="Serial number",
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True,
                        help_text="Device registration or license number",
                        max_length=100,
                        verbose_name="Registration number",
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the device is enabled for automatic synchronization",
                        verbose_name="Is enabled",
                    ),
                ),
                (
                    "is_connected",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the device is currently online and reachable",
                        verbose_name="Connection status",
                    ),
                ),
                (
                    "realtime_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether realtime listener is enabled for this device",
                        verbose_name="Realtime enabled",
                    ),
                ),
                (
                    "realtime_disabled_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when realtime was disabled due to connection failures",
                        null=True,
                        verbose_name="Realtime disabled at",
                    ),
                ),
                (
                    "polling_synced_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp of last successful polling sync from device",
                        null=True,
                        verbose_name="Last polling sync",
                    ),
                ),
                (
                    "block",
                    models.ForeignKey(
                        blank=True,
                        help_text="Block where device is installed",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_devices",
                        to="hrm.block",
                        verbose_name="Block",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attendance Device",
                "verbose_name_plural": "Attendance Devices",
                "db_table": "hrm_attendance_device",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceRecord",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "attendance_code",
                    models.CharField(
                        help_text="User ID from device, used to match with Employee.attendance_code",
                        max_length=20,
                        verbose_name="Attendance code",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        help_text="Date and time when attendance was recorded", verbose_name="Timestamp"
                    ),
                ),
                (
                    "is_valid",
                    models.BooleanField(
                        default=True, help_text="Whether this attendance record is valid", verbose_name="Is valid"
                    ),
                ),
                (
                    "notes",
                    libs.models.fields.SafeTextField(
                        blank=True,
                        help_text="Additional notes or comments about this attendance record",
                        verbose_name="Notes",
                    ),
                ),
                (
                    "raw_data",
                    models.JSONField(
                        blank=True,
                        help_text="Complete raw data from device for debugging purposes",
                        null=True,
                        verbose_name="Raw data",
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        help_text="Attendance device that captured this record",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_records",
                        to="hrm.attendancedevice",
                        verbose_name="Device",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attendance Record",
                "verbose_name_plural": "Attendance Records",
                "db_table": "hrm_attendance_record",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(fields=["attendance_code", "-timestamp"], name="hrm_attenda_attenda_ffc559_idx"),
                    models.Index(fields=["device", "-timestamp"], name="hrm_attenda_device__d1a9e3_idx"),
                    models.Index(fields=["-timestamp"], name="hrm_attenda_timesta_8657e9_idx"),
                ],
            },
        ),
    ]
