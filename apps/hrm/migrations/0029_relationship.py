# Generated by Django 5.2.6 on 2025-10-31 05:26

import apps.hrm.models.relationship
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('files', '0002_add_uploaded_by_field'),
        ('hrm', '0028_employee_is_onboarding_email_sent_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_code', models.CharField(blank=True, editable=False, help_text='Cached employee code', max_length=50, verbose_name='Employee code')),
                ('employee_name', models.CharField(blank=True, editable=False, help_text='Cached employee name', max_length=255, verbose_name='Employee name')),
                ('relative_name', models.CharField(help_text='Full name of the relative', max_length=255, verbose_name='Relative name')),
                ('relation_type', models.CharField(choices=[('CHILD', 'Child'), ('SPOUSE', 'Spouse'), ('PARTNER', 'Partner'), ('PARENT', 'Parent'), ('SIBLING', 'Sibling'), ('GRANDPARENT', 'Grandparent'), ('OTHER', 'Other')], help_text='Type of relationship to the employee', max_length=20, verbose_name='Relation type')),
                ('date_of_birth', models.DateField(blank=True, help_text='Date of birth of the relative', null=True, verbose_name='Date of birth')),
                ('national_id', models.CharField(blank=True, help_text='National ID (CMND/CCCD) - 9 or 12 digits', max_length=12, validators=[django.core.validators.RegexValidator('^\\d+$', 'National ID must contain only digits.'), apps.hrm.models.relationship.validate_national_id], verbose_name='National ID')),
                ('address', models.TextField(blank=True, help_text='Residential address of the relative', verbose_name='Address')),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=20, validators=[apps.hrm.models.relationship.validate_phone], verbose_name='Phone')),
                ('note', models.TextField(blank=True, help_text='Additional notes or information', verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this relationship record is active', verbose_name='Is active')),
                ('attachment', models.ForeignKey(blank=True, help_text='Supporting document or file attachment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relationship_attachments', to='files.filemodel', verbose_name='Attachment')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_relationships', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('employee', models.ForeignKey(help_text='Employee associated with this relationship', on_delete=django.db.models.deletion.PROTECT, related_name='relationships', to='hrm.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Relationship',
                'verbose_name_plural': 'Relationships',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['employee', 'is_active'], name='hrm_relatio_employe_576578_idx'), models.Index(fields=['national_id'], name='hrm_relatio_nationa_a19e44_idx')],
            },
        ),
    ]
