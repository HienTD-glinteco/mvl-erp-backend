# Generated by manual creation for Employee model updates

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def populate_username_email(apps, schema_editor):
    """Populate username and email for existing employees during forward migration.

    Priority:
    1. If employee has a linked User, copy username and email from User
    2. Otherwise, generate unique username and email
    """
    Employee = apps.get_model("hrm", "Employee")

    employees = list(Employee.objects.all())
    for idx, employee in enumerate(employees, start=1):
        # If employee has a linked User, copy data from User
        if employee.user_id:
            try:
                user = employee.user
                if not employee.username and user.username:
                    employee.username = user.username
                if not employee.email and user.email:
                    employee.email = user.email
            except Exception:
                # If User doesn't exist or other error, fallback to generated values
                pass

        # Generate unique username if still empty
        if not employee.username:
            employee.username = f"employee_{employee.id or idx}"

        # Generate unique email if still empty
        if not employee.email:
            employee.email = f"employee_{employee.id or idx}@maivietland.com"

    if employees:
        Employee.objects.bulk_update(employees, ["username", "email"])


def reverse_populate_username_email(apps, schema_editor):
    """Reverse migration - no action needed for username/email."""
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("hrm", "0009_update_code_related_models"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Rename name field to fullname
        migrations.RenameField(
            model_name="employee",
            old_name="name",
            new_name="fullname",
        ),
        # Add username field WITHOUT unique constraint first
        migrations.AddField(
            model_name="employee",
            name="username",
            field=models.CharField(default="", max_length=100, verbose_name="Username"),
            preserve_default=False,
        ),
        # Add email field WITHOUT unique constraint first
        migrations.AddField(
            model_name="employee",
            name="email",
            field=models.EmailField(default="", max_length=254, verbose_name="Email"),
            preserve_default=False,
        ),
        # Populate data for username and email
        migrations.RunPython(populate_username_email, reverse_populate_username_email),
        # Now add unique constraint for username
        migrations.AlterField(
            model_name="employee",
            name="username",
            field=models.CharField(max_length=100, unique=True, verbose_name="Username"),
        ),
        # Now add unique constraint for email
        migrations.AlterField(
            model_name="employee",
            name="email",
            field=models.EmailField(unique=True, verbose_name="Email"),
        ),
        # Add phone field
        migrations.AddField(
            model_name="employee",
            name="phone",
            field=models.CharField(blank=True, max_length=15, verbose_name="Phone number"),
        ),
        # Add branch field
        migrations.AddField(
            model_name="employee",
            name="branch",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="employees",
                to="hrm.branch",
                verbose_name="Branch",
            ),
            preserve_default=False,
        ),
        # Add block field
        migrations.AddField(
            model_name="employee",
            name="block",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="employees",
                to="hrm.block",
                verbose_name="Block",
            ),
            preserve_default=False,
        ),
        # Add department field
        migrations.AddField(
            model_name="employee",
            name="department",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="employees",
                to="hrm.department",
                verbose_name="Department",
            ),
            preserve_default=False,
        ),
        # Add note field
        migrations.AddField(
            model_name="employee",
            name="note",
            field=models.TextField(blank=True, verbose_name="Note"),
        ),
        # Alter user field to be nullable
        migrations.AlterField(
            model_name="employee",
            name="user",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="employee",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterField(
            model_name="employee",
            name="fullname",
            field=models.CharField(max_length=200, verbose_name="Full name"),
        ),
    ]
