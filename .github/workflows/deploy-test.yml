name: Deploy to Test Environment

on:
  push:
    branches: [ master ]

jobs:
  deploy-test:
    name: Deploy to Test Environment
    runs-on: ubuntu-latest
    environment: test

    steps:
    - name: Deploy to EC2 Test Server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.TEST_HOST }}
        username: ${{ secrets.TEST_USERNAME }}
        key: ${{ secrets.TEST_SSH_KEY }}
        script: |
          set -Eeuo pipefail
          trap 'echo "❌ Error at line $LINENO"; exit 1' ERR


          # Navigate to application directory
          cd /home/ubuntu/maivietland/backend
          
          # Pull latest changes from master
          git fetch --all --prune
          git pull origin master
          
          # Activate virtual environment and install dependencies
          export PATH="$HOME/.local/bin:$PATH"
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root
          
          # Run database migrations
          poetry run python manage.py migrate --noinput
          
          # Update supervisor configuration and restart gunicorn workers
          sudo supervisorctl reread
          sudo supervisorctl update
          sudo supervisorctl restart maivietland-api maivietland-worker
          
          # Reload nginx configuration
          sudo nginx -t && sudo nginx -s reload

    - name: Health Check (with retry)
      run: |
        set -Eeuo pipefail
        url="${{ vars.TEST_APP_URL }}/health/"
        for i in {1..10}; do
          status=$(curl -sS -o /dev/null -w "%{http_code}" --max-time 10 "$url") || status="000"
          if [ "$status" = "200" ]; then
            echo "✅ Deploy thành công: 200 OK (attempt $i)"
            exit 0
          fi
          echo "⏳ Chưa sẵn sàng (HTTP $status) — thử lại ($i/10)"; sleep 5
        done
        echo "❌ Deploy thất bại: không nhận được 200 OK sau 10 lần thử"
        exit 1

    - name: Notify Deployment
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        text: "TEST deployment completed with status: ${{ job.status }}"
      env:
        SLACK_WEBHOOK_URL: ${{ vars.SLACK_WEBHOOK_URL }}